# -*- coding: utf-8 -*-
"""Sales Trends Analysis of a Superstore .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1G7-3dru_Yj1QiBBapDnU3i0KtACLM-41

Goal:
Learn to fix missing data,find patterns and visualize data using the Superstore Sales Dataset to understand sales trends and share 3 key insights with charts.

1: Importing liabraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""2: Loading dataset"""

# This dataset have non utf-8 characetrs so we will use latin1 to handle it.
data=pd.read_csv('/content/archive.zip',encoding='latin1')

data.head(5)

"""3: Data Exploring

"""

data.columns

data.shape

data.info()

data.isnull().any()

data.isnull().any().sum()

"""No Null values

Summary
"""

data.describe()

"""There are outliers in the Sales and Profit columns.
But we will will not perform any query as it is not mention in the Task.

Outliers
"""

import seaborn as sns
sns.boxplot(data['Sales'])

sns.boxplot(data['Profit'])

""">Task: Perform exploratory analysis e.g., Which category sells best?

"""

category_sales = data.groupby('Category')['Sales'].sum().sort_values(ascending=False)
category_sales

"""The Technology category sells best.

>Which region earns the most?
"""

region_earns=data.groupby('Region')['Profit'].sum().sort_values(ascending=False)
region_earns

"""West Region earns the most profit

>Bar chart 1: Best selling category
"""

plt.figure(figsize=(7,4))
category_sales.plot(kind='bar',color='blue')
plt.xlabel('Category')
plt.ylabel('Sales')
plt.title('Best selling category')
plt.tight_layout()
plt.show()

"""Insight 1: Technology is the Best-Selling Category as shown in Bar chart 1

> Bar chart 2: Which Regions earns most profit
"""

plt.figure(figsize=(7,4))
region_earns.plot(kind='bar',color='blue')
plt.xlabel('Region')
plt.ylabel('Profit')
plt.title('Regions with most profit')
plt.tight_layout()
plt.show()

"""Insight 2:  West Region Earns the Most Profit as shown in bar chart 2

> Heatmap : Correlation between Numeric Features
"""

plt.figure(figsize=(8, 6))
numeric_data = data[['Sales', 'Profit', 'Quantity', 'Discount']]
corr = numeric_data.corr()

sns.heatmap(corr, annot=True, cmap='coolwarm', linewidths=0.5)
plt.title("Correlation Heatmap")
plt.tight_layout()
plt.show()

"""Insight 3: Sales and Profit Have Weak Correlation

>

>Line Graph:  Monthly Sales Trend
This will  helps us to  analyze sales monthly instead of daily
"""

data['Month_Year'] = data['Order Date'].dt.to_period('M')# no day only year and month
monthly_sales = data.groupby('Month_Year')['Sales'].sum()# Group all rows with same year and month and add to sales

plt.figure(figsize=(7, 4))
monthly_sales.plot(kind='line', marker='o', color='blue')
plt.title("Monthly Sales Trend")
plt.xlabel("Month-Year")
plt.ylabel("Sales")
plt.tight_layout()
plt.show()

"""Insight 4: Sales Spike every year  in November and December

>4: Data preprocessing.

Task : Load and clean the dataset (handle missing values, date parsing)
"""

# As mention earlier there is no null values in Dataset.
#I will only remove Row ID column as it is not required.

data=data.drop('Row ID',axis=1)

data.head(2)

""">Date parsing"""

# for order date
data['Order Date'] = pd.to_datetime(data['Order Date'])

# for ship date
data['Ship Date'] = pd.to_datetime(data['Ship Date'])
data.head(5)

data.dtypes

"""Succesfully converted to datetime



Date parsing completed
"""

